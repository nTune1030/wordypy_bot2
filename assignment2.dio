<mxGraphModel dx="679" dy="382" grid="1" gridSize="10" guides="1" tooltips="1" connect="1" arrows="1" fold="1" page="1" pageScale="1" pageWidth="850" pageHeight="1100" background="#ffffff"><root><mxCell id="0"/><mxCell id="1" parent="0"/><mxCell id="3" value="Letter" style="swimlane;fontStyle=1;align=center;verticalAlign=top;childLayout=stackLayout;horizontal=1;startSize=26;horizontalStack=0;resizeParent=1;resizeParentMax=0;resizeLast=0;collapsible=1;marginBottom=0;swimlaneFillColor=#ffffff;" parent="1" vertex="1"><mxGeometry x="10" y="120" width="440" height="140" as="geometry"/></mxCell><mxCell id="4" value="letter: str&#10;in_correct_place: bool = False&#10;in_word: bool = False" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;" parent="3" vertex="1"><mxGeometry y="26" width="440" height="54" as="geometry"/></mxCell><mxCell id="5" value="" style="line;strokeWidth=1;fillColor=none;align=left;verticalAlign=middle;spacingTop=-1;spacingLeft=3;spacingRight=3;rotatable=0;labelPosition=right;points=[];portConstraint=eastwest;" parent="3" vertex="1"><mxGeometry y="80" width="440" height="8" as="geometry"/></mxCell><mxCell id="6" value="__init_(letter: str) -&gt; None&#10;is_in_correct_place(self) -&gt; bool&#10;is_in_word(self) -&gt; bool" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;" parent="3" vertex="1"><mxGeometry y="88" width="440" height="52" as="geometry"/></mxCell><mxCell id="7" value="DisplaySpecification" style="swimlane;fontStyle=1;align=center;verticalAlign=top;childLayout=stackLayout;horizontal=1;startSize=26;horizontalStack=0;resizeParent=1;resizeParentMax=0;resizeLast=0;collapsible=1;marginBottom=0;swimlaneFillColor=#ffffff;" parent="1" vertex="1"><mxGeometry x="10" y="270" width="440" height="138" as="geometry"/></mxCell><mxCell id="8" value="block_width: int = 80&#10;block_height: int = 80&#10;space_between_letters: int = 5&#10;correct_location_color: str = &quot;#00274C&quot;&#10;incorrect_location_color: str = &quot;#FFCB05&quot;&#10;incorrect_color: str = &quot;#D3D3D3&quot;&#10;word_color: str = &quot;#FFFFFF&quot;" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;fontStyle=1" parent="7" vertex="1"><mxGeometry y="26" width="440" height="104" as="geometry"/></mxCell><mxCell id="9" value="" style="line;strokeWidth=1;fillColor=none;align=left;verticalAlign=middle;spacingTop=-1;spacingLeft=3;spacingRight=3;rotatable=0;labelPosition=right;points=[];portConstraint=eastwest;" parent="7" vertex="1"><mxGeometry y="130" width="440" height="8" as="geometry"/></mxCell><mxCell id="15" value="GameEngine" style="swimlane;fontStyle=1;align=center;verticalAlign=top;childLayout=stackLayout;horizontal=1;startSize=26;horizontalStack=0;resizeParent=1;resizeParentMax=0;resizeLast=0;collapsible=1;marginBottom=0;swimlaneFillColor=#ffffff;html=1;" parent="1" vertex="1"><mxGeometry x="10" y="596" width="440" height="86" as="geometry"/></mxCell><mxCell id="16" value="__init__(self, &lt;b&gt;display_spec: DisplaySpecification&lt;/b&gt;)" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;html=1;" parent="15" vertex="1"><mxGeometry y="26" width="440" height="26" as="geometry"/></mxCell><mxCell id="17" value="" style="line;strokeWidth=1;fillColor=none;align=left;verticalAlign=middle;spacingTop=-1;spacingLeft=3;spacingRight=3;rotatable=0;labelPosition=right;points=[];portConstraint=eastwest;" parent="15" vertex="1"><mxGeometry y="52" width="440" height="8" as="geometry"/></mxCell><mxCell id="18" value="play(self, bot: Bot, word_list_file: str, target_word: str) -&gt; List[Letter]" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;" parent="15" vertex="1"><mxGeometry y="60" width="440" height="26" as="geometry"/></mxCell><mxCell id="19" value="wordypy_bot2" style="text;strokeColor=none;fillColor=none;html=1;fontSize=24;fontStyle=1;verticalAlign=middle;align=center;" parent="1" vertex="1"><mxGeometry x="10" y="30" width="200" height="40" as="geometry"/></mxCell><mxCell id="20" value="Bold indicates new elements from assignment 1" style="text;align=center;fontStyle=1;verticalAlign=middle;spacingLeft=3;spacingRight=3;strokeColor=none;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;html=1;" parent="1" vertex="1"><mxGeometry x="20" y="70" width="300" height="26" as="geometry"/></mxCell><mxCell id="11" value="Bot" style="swimlane;fontStyle=1;align=center;verticalAlign=top;childLayout=stackLayout;horizontal=1;startSize=26;horizontalStack=0;resizeParent=1;resizeParentMax=0;resizeLast=0;collapsible=1;marginBottom=0;swimlaneFillColor=#ffffff;html=1;" parent="1" vertex="1"><mxGeometry x="10" y="420" width="440" height="160" as="geometry"/></mxCell><mxCell id="12" value="word_list: list[str]&lt;br&gt;display_spec: DisplaySpecification" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;html=1;" parent="11" vertex="1"><mxGeometry y="26" width="440" height="44" as="geometry"/></mxCell><mxCell id="13" value="" style="line;strokeWidth=1;fillColor=none;align=left;verticalAlign=middle;spacingTop=-1;spacingLeft=3;spacingRight=3;rotatable=0;labelPosition=right;points=[];portConstraint=eastwest;" parent="11" vertex="1"><mxGeometry y="70" width="440" height="8" as="geometry"/></mxCell><mxCell id="14" value="__init__(self, word_list_file: str, display_spec: DisplaySpecification) -&amp;gt; None&lt;br&gt;&lt;b&gt;_tuple_to_str(self, pixels: str) -&amp;gt; str&lt;br&gt;_process_image(self, guess: str, guess_image: Image) -&amp;gt; list[Letter]&lt;/b&gt;&lt;br&gt;make_guess(self) -&amp;gt; str&lt;br&gt;record_guess_results(self, guess: str, &lt;b&gt;guess_results: Image&lt;/b&gt;) -&amp;gt; None&lt;br&gt;" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;fontStyle=0;html=1;" parent="11" vertex="1"><mxGeometry y="78" width="440" height="82" as="geometry"/></mxCell></root></mxGraphModel>